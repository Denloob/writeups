import idaapi
import ida_hexrays
import idc

func_addresses = [0x401210, 0x401240, 0x401270, 0x401280, 0x401290, 0x4012a0, 0x4012c0, 0x4012d0, 0x4012e0, 0x4012f0, 0x401310, 0x401320, 0x401330, 0x401340, 0x401360, 0x401370, 0x401380, 0x4013a0, 0x4013c0, 0x4013e0, 0x4013f0, 0x401400, 0x401410, 0x401420, 0x401430, 0x401440, 0x401460, 0x401470, 0x401480, 0x401490, 0x4014a0, 0x4014c0, 0x4014d0, 0x4014e0, 0x4014f0, 0x401500, 0x401510, 0x401530, 0x401540, 0x401560, 0x401580, 0x4015a0, 0x4015c0, 0x4015e0, 0x4015f0, 0x401610, 0x401630, 0x401640, 0x401660, 0x401680, 0x4016a0, 0x4016c0, 0x4016e0, 0x4016f0, 0x401710, 0x401730, 0x401740, 0x401750, 0x401760, 0x401770]


def define_function_at(addr):
    return idaapi.get_func(addr) or not idc.add_func(addr)

assert not ida_hexrays.init_hexrays_plugin(), "init_hexrays_plugin: Failed"

for addr in func_addresses:
    if not define_function_at(addr):
        continue

    try:
        print(ida_hexrays.decompile(addr))
    except ida_hexrays.DecompilationFailure:
        print(f"decompile({addr:#x}): Failed")

ida_hexrays.term_hexrays_plugin()
