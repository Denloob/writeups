#!/usr/bin/env sage

from sage.all import *
from Crypto.Util.number import long_to_bytes, bytes_to_long

n = 5113166966960118603250666870544315753374750136060769465485822149528706374700934720443689630473991177661169179462100732951725871457633686010946951736764639
c = 329402637167950119278220170950190680807120980712143610290182242567212843996710001488280098771626903975534140478814872389359418514658167263670496584963653
cor_m = 724154397787031699242933363312913323086319394176220093419616667612889538090840511507392245976984201647543870740055095781645802588721
e = 2

flag_len = 55
partial_m_len = 35
partial_m = long_to_bytes(cor_m)[:partial_m_len] + b"\x00" * (flag_len - partial_m_len)

msg = bytes_to_long(partial_m)
P.<x> = PolynomialRing(Zmod(n))
f = (msg + x)^e - c
f = f.monic()
missing_part = f.small_roots()[0]

print(long_to_bytes(int(msg + missing_part)).decode()) # AKASEC{c0pp3r5m17h_4774ck_1n_1ov3_w17h_5m4ll_3xp0n3nts}
